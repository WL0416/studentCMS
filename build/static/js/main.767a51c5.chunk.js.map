{"version":3,"sources":["components/layout/spinner.gif","components/layout/AppNavbar.js","components/layout/Footer.js","components/layout/Spinner.js","components/courses/Courses.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/courses/AddCourse.js","components/courses/EditCourse.js","actions/notifyActions.js","actions/types.js","components/layout/Alert.js","components/auth/Login.js","components/settings/Settings.js","actions/settingsActions.js","components/auth/Register.js","components/util/tools.js","components/offer/AddOffer.js","reducers/notifyReducer.js","store.js","reducers/settingsReducer.js","components/util/auth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppNavBar","state","isAutheticated","onLogoutClick","e","preventDefault","props","firebase","logout","isAuthenticated","this","auth","allowRegistration","settings","className","to","type","data-toggle","data-target","id","href","email","onClick","uid","Component","compose","firebaseConnect","connect","Footer","style","position","left","bottom","width","target","rel","Spinner","src","spinner","alt","margin","display","Courses","useFirestoreConnect","courses","useSelector","firestore","ordered","isLoaded","isEmpty","coursesArray","Object","values","map","course","key","name","code","cricos","term","duration","Sidebar","Dashboard","AddCourse","onSubmit","newCourse","add","collection","then","history","push","onChange","setState","value","Fragment","htmlFor","minLength","required","firestoreConnect","EditCourse","update","doc","onDelete","delete","storeAs","match","params","notifyUser","message","messageType","Alert","classnames","Login","password","login","catch","err","notify","Settings","allowRegistrationChange","setAllowRegistration","checked","JSON","parse","localStorage","getItem","setItem","stringify","payload","createUser","convertDate","date","timeArray","split","AddOffer","firstName","lastName","birthday","passport","phone","address","enrolFee","issueDate","courseName","start","end","tuition","materialsFee","totalFee","balance","campus","campusAddress","officerName","tuitionFirst","totalDue","template","filter","parseFloat","toFixed","period2","period3","period4","parseInt","eachTermFee","Date","now","firstname","initialState","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","rootReducer","combineReducers","firebaseReducer","firestoreReducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","isInitializing","profile","authenticatedSelector","UserIsNotAuthenticated","App","basename","AppNavbar","exact","path","component","Register","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.767a51c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.3dcbcaae.gif\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AppNavBar extends Component {\r\n  state = {\r\n    isAutheticated: false,\r\n  };\r\n\r\n  // this is the new way the update the state from the props,\r\n  // recommended to use this instead of componentWillReceiveProps\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { auth } = props;\r\n\r\n    if (auth.uid) {\r\n      return { isAuthenticated: true };\r\n    } else {\r\n      return { isAuthenticated: false };\r\n    }\r\n  }\r\n\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { firebase } = this.props;\r\n    firebase.logout();\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.state;\r\n    const { auth } = this.props;\r\n    const { allowRegistration } = this.props.settings;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            Student CMS\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"navbarMain\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n            {/* <ul className=\"navbar-nav mr-auto\">\r\n              {isAuthenticated ? (\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Dashboard\r\n                  </Link>\r\n                </li>\r\n              ) : null}\r\n            </ul> */}\r\n            {isAuthenticated ? (\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"#!\" className=\"nav-link\">\r\n                    {auth.email}\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/settings\" className=\"nav-link\">\r\n                    Settings\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a\r\n                    href=\"#!\"\r\n                    className=\"nav-link\"\r\n                    onClick={this.onLogoutClick}\r\n                  >\r\n                    Logout\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n            {allowRegistration && !isAuthenticated ? (\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/login\" className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/register\" className=\"nav-link\">\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nAppNavBar.propTypes = {\r\n  firebase: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect((state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings,\r\n  }))\r\n)(AppNavBar);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      className=\"page-footer font-small bg-dark\"\r\n      style={{ position: \"fixed\", left: \"0\", bottom: \"0\", width: \"100%\" }}\r\n    >\r\n      <div className=\"footer-copyright text-center py-3 text-white\">\r\n        Contact{\" \"}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/wei-li-439546126\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Wei Li\r\n        </a>{\" \"}\r\n        for more assistance.\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading..\"\r\n        style={{ width: \"100px\", margin: \"auto\", display: \"block\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from \"react-redux-firebase\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nfunction Courses() {\r\n  // hook to sync the data from firestore to local state\r\n  useFirestoreConnect([\"courses\"]);\r\n  const courses = useSelector((state) => state.firestore.ordered.courses);\r\n\r\n  if (!isLoaded(courses)) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isEmpty(courses)) {\r\n    return <h1>There is no courses registered...</h1>;\r\n  }\r\n\r\n  const coursesArray = Object.values(courses);\r\n\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <thead className=\"thead-inverse\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Code</th>\r\n          <th>CRICOS</th>\r\n          <th>Terms</th>\r\n          <th>Duration</th>\r\n          <th>Detail</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {coursesArray.map((course) => (\r\n          <tr key={course.id}>\r\n            <td>{course.name}</td>\r\n            <td>{course.code}</td>\r\n            <td>{course.cricos}</td>\r\n            <td>{course.term}</td>\r\n            <td>{course.duration} weeks</td>\r\n            <td>\r\n              <Link\r\n                to={`/courses/${course.id}`}\r\n                className=\"btn btn-secondary btn-sm\"\r\n              >\r\n                <i className=\"fas fa-user-graduate\"></i>\r\n              </Link>\r\n              <Link\r\n                to={`/courses/edit/${course.id}`}\r\n                className=\"btn btn-success btn-sm ml-2\"\r\n              >\r\n                <i className=\"fas fa-pencil-alt\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Courses;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <>\r\n      <Link to=\"/courses/add\" className=\"btn btn-success btn-block\">\r\n        <i className=\"fas fa-plus\"></i> Class\r\n      </Link>\r\n      <Link to=\"/offer/add\" className=\"btn btn-info btn-block\">\r\n        <i className=\"fas fa-plus\"></i> Offer\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Courses from \"../courses/Courses\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-11\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h2>\r\n              <i className=\"fas fa-graduation-cap\"></i> Courses\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <Courses />\r\n      </div>\r\n      <div className=\"col-md-1\">\r\n        <Sidebar />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n// import firebase from \"firebase/app\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddCourse extends Component {\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    cricos: \"\",\r\n    duration: \"\",\r\n    term: \"\",\r\n    // start: \"\",\r\n    // end: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newCourse = this.state;\r\n    const { firestore } = this.props;\r\n\r\n    // parse string of date to the format of firebase accepted.\r\n    // newCourse.start = firebase.firestore.Timestamp.fromDate(\r\n    //   new Date(newCourse.start)\r\n    // );\r\n    // newCourse.end = firebase.firestore.Timestamp.fromDate(\r\n    //   new Date(newCourse.end)\r\n    // );\r\n\r\n    firestore\r\n      .add({ collection: \"courses\" }, newCourse)\r\n      .then(() => this.props.history.push(\"/\"));\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <h2>\r\n              <i className=\"fas fa-folder-plus\"></i> Add Course\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back To Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Course Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    minLength=\"2\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"code\">Course Code</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"code\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.code}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"cricos\">CRICOS</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cricos\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.cricos}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  {\" \"}\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"duration\">Course Duration</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"duration\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.duration}\r\n                    />\r\n                  </div>{\" \"}\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"term\">Term</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"term\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.term}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"start\">Start Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"start\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.start.valueAsNumber}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"end\">End Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"end\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.end.valueAsNumber}\r\n                    />\r\n                  </div>\r\n                </div> */}\r\n                <br />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add\"\r\n                  className=\"btn btn-success btn-block col-md-4 offset-md-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nAddCourse.propTypes = {\r\n  firestore: PropTypes.object,\r\n};\r\n\r\nexport default firestoreConnect()(AddCourse);\r\n","import React, { Component } from \"react\";\r\n// import firebase from \"firebase/app\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nclass EditCourse extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    cricos: \"\",\r\n    duration: \"\",\r\n    term: \"\",\r\n    // start: \"\",\r\n    // end: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newCourse = this.state;\r\n    const { firestore } = this.props;\r\n\r\n    // // parse string of date to the format of firebase accepted.\r\n    // newCourse.start = firebase.firestore.Timestamp.fromDate(\r\n    //   new Date(newCourse.start)\r\n    // );\r\n    // newCourse.end = firebase.firestore.Timestamp.fromDate(\r\n    //   new Date(newCourse.end)\r\n    // );\r\n\r\n    // firestore update document\r\n    firestore\r\n      .update({ collection: \"courses\", doc: newCourse.id }, newCourse)\r\n      .then(() => this.props.history.push(\"/\"));\r\n  };\r\n\r\n  onDelete = (e) => {\r\n    e.preventDefault();\r\n    const { firestore } = this.props;\r\n    firestore\r\n      .delete({ collection: \"courses\", doc: this.state.id })\r\n      .then(() => this.props.history.push(\"/\"));\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { course } = this.props;\r\n    if (course && this.state.id !== course.id) {\r\n      this.setState({\r\n        ...course,\r\n        // start: inputDate(course.start.seconds),\r\n        // end: inputDate(course.end.seconds),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.id) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n              <h2>\r\n                <i className=\"fas fa-edit\"></i> Edit Course\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <Link to=\"/\" className=\"btn btn-link\">\r\n                <i className=\"fas fa-arrow-circle-left\"></i> Back To Dashboard\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Course Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"name\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 form-group\">\r\n                      <label htmlFor=\"code\">Course Code</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"code\"\r\n                        minLength=\"2\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={this.state.code}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group\">\r\n                      <label htmlFor=\"cricos\">CRICOS</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"cricos\"\r\n                        minLength=\"2\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={this.state.cricos}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    {\" \"}\r\n                    <div className=\"col-md-6 form-group\">\r\n                      <label htmlFor=\"duration\">Course Duration</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"duration\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={this.state.duration}\r\n                      />\r\n                    </div>{\" \"}\r\n                    <div className=\"col-md-6 form-group\">\r\n                      <label htmlFor=\"term\">Term</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"term\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={this.state.term}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"row\">\r\n                    <div className=\"col-md-6 form-group\">\r\n                      <label htmlFor=\"start\">Start Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        name=\"start\"\r\n                        minLength=\"2\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={this.state.start}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 form-group\">\r\n                      <label htmlFor=\"end\">End Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        name=\"end\"\r\n                        minLength=\"2\"\r\n                        required\r\n                        onChange={this.onChange}\r\n                        value={this.state.end}\r\n                      />\r\n                    </div>\r\n                  </div> */}\r\n                  <br />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update\"\r\n                    className=\"btn btn-success btn-block col-md-4 offset-md-4\"\r\n                  />\r\n                </form>\r\n                <button\r\n                  className=\"btn btn-danger btn-block col-md-4 offset-md-4 mt-3\"\r\n                  onClick={this.onDelete}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect((props) => [\r\n    { collection: \"courses\", storeAs: \"course\", doc: props.match.params.id },\r\n  ]),\r\n  connect(({ firestore: { ordered } }) => ({\r\n    course: ordered.course && ordered.course[0],\r\n  }))\r\n)(EditCourse);\r\n","import { NOTIFY_USER } from \"./types\";\r\n\r\nexport const notifyUser = (message, messageType) => {\r\n  return {\r\n    type: NOTIFY_USER,\r\n    message,\r\n    messageType,\r\n  };\r\n};\r\n","export const NOTIFY_USER = \"NOTIFY_USER\";\r\nexport const ALLOW_REGISTRATION = \"ALLOW_REGISTRATION\";\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Alert = (props) => {\r\n  const { message, messageType } = props;\r\n  return (\r\n    <div\r\n      className={classnames(\"alert\", {\r\n        \"alert-success\": messageType === \"success\",\r\n        \"alert-danger\": messageType === \"error\",\r\n      })}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  messageType: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { notifyUser } from \"../../actions/notifyActions\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { firebase, notifyUser } = this.props;\r\n    const email = this.state.email[0];\r\n    const password = this.state.password[0];\r\n\r\n    firebase\r\n      .login({\r\n        email,\r\n        password,\r\n      })\r\n      .catch((err) => notifyUser(\"Invalid Username or Password\", \"error\"));\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: [e.target.value] });\r\n\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                {message ? (\r\n                  <Alert message={message} messageType={messageType} />\r\n                ) : null}\r\n                <h1 className=\"text-center pb-4 pt-3\">\r\n                  <span className=\"text-primary\">\r\n                    <i className=\"fas fa-lock mr-2\"></i>\r\n                    Login\r\n                  </span>\r\n                </h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      className=\"form-control\"\r\n                      required\r\n                      value={this.state.email}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      className=\"form-control\"\r\n                      required\r\n                      value={this.state.password}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Login\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  firebase: PropTypes.object.isRequired,\r\n  notify: PropTypes.object.isRequired,\r\n  notifyUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    (state, props) => ({\r\n      notify: state.notify,\r\n    }),\r\n    { notifyUser }\r\n  )\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAllowRegistration } from \"../../actions/settingsActions\";\r\n\r\nclass Settings extends Component {\r\n  allowRegistrationChange = () => {\r\n    const { setAllowRegistration } = this.props;\r\n    setAllowRegistration();\r\n  };\r\n\r\n  render() {\r\n    const { allowRegistration } = this.props.settings;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Edit Settings</div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label> Allow Registration</label>{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"allRegistration\"\r\n                  checked={!!allowRegistration}\r\n                  onChange={this.allowRegistrationChange}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  setAllowRegistration: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  (state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings,\r\n  }),\r\n  { setAllowRegistration }\r\n)(Settings);\r\n","import { ALLOW_REGISTRATION } from \"./types\";\r\n\r\nexport const setAllowRegistration = () => {\r\n  // Get settings from localStorage\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  // Toggle\r\n  settings.allowRegistration = !settings.allowRegistration;\r\n\r\n  // Set back to localStorage\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n\r\n  return {\r\n    type: ALLOW_REGISTRATION,\r\n    payload: settings.allowRegistration,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { notifyUser } from \"../../actions/notifyActions\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { allowRegistration } = this.props.settings;\r\n\r\n    if (!allowRegistration) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { firebase, notifyUser } = this.props;\r\n    const email = this.state.email[0];\r\n    const password = this.state.password[0];\r\n\r\n    firebase\r\n      .createUser({\r\n        email,\r\n        password,\r\n      })\r\n      .catch((err) => notifyUser(\"That User Already Exists\", \"error\"));\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: [e.target.value] });\r\n\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                {message ? (\r\n                  <Alert message={message} messageType={messageType} />\r\n                ) : null}\r\n                <h1 className=\"text-center pb-4 pt-3\">\r\n                  <span className=\"text-primary\">\r\n                    <i className=\"fas fa-lock mr-2\"></i>\r\n                    Register\r\n                  </span>\r\n                </h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      className=\"form-control\"\r\n                      required\r\n                      value={this.state.email}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      className=\"form-control\"\r\n                      required\r\n                      value={this.state.password}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Register\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  firebase: PropTypes.object.isRequired,\r\n  notify: PropTypes.object.isRequired,\r\n  notifyUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    (state, props) => ({\r\n      notify: state.notify,\r\n      settings: state.settings,\r\n    }),\r\n    { notifyUser }\r\n  )\r\n)(Login);\r\n","// Convert timestamp into readable date string\r\nexport const timeConvert = (timestamp) => {\r\n  return new Date(timestamp * 1000).toDateString();\r\n};\r\n\r\n// Convert timestap into HTML input date format\r\nexport const inputDate = (timestamp) => {\r\n  let date = new Date(timestamp * 1000);\r\n  let month = date.getMonth() + 1;\r\n  if (month < 10) {\r\n    month = \"0\" + month;\r\n  }\r\n  let day = date.getDate();\r\n  if (day < 10) {\r\n    day = \"0\" + day;\r\n  }\r\n  date = date.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return date;\r\n};\r\n\r\n// convert YYYY-mm-dd to dd/mm/YYYY\r\nexport const convertDate = (date) => {\r\n  const timeArray = date.split(\"-\");\r\n  return timeArray[2] + \"/\" + timeArray[1] + \"/\" + timeArray[0];\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { firestoreConnect } from \"react-redux-firebase\";\r\n// import firebase from \"firebase/app\";\r\n// import PropTypes from \"prop-types\";\r\n// import { connect } from \"react-redux\";\r\n// import { compose } from \"redux\";\r\nimport { convertDate } from \"../util/tools\";\r\n\r\nclass AddOffer extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    birthday: \"\",\r\n    passport: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    enrolFee: \"\",\r\n    issueDate: \"\",\r\n    courseName: \"\",\r\n    code: \"\",\r\n    cricos: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    duration: \"\",\r\n    term: \"\",\r\n    tuition: \"\",\r\n    materialsFee: \"\",\r\n    totalFee: \"\",\r\n    balance: \"\",\r\n    campus: \"\",\r\n    campusAddress: \"\",\r\n    officerName: \"\",\r\n    tuitionFirst: \"\",\r\n    totalDue: \"\",\r\n    template: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { firestore } = this.props;\r\n    const { courses } = this.props;\r\n    const { code, cricos, duration, term } = Object.values(courses).filter(\r\n      (course) => course.name === this.state.courseName\r\n    )[0];\r\n    const { enrolFee, tuition, materialsFee, tuitionFirst } = this.state;\r\n\r\n    const totalDue = (\r\n      parseFloat(enrolFee) +\r\n      parseFloat(tuitionFirst) +\r\n      parseFloat(materialsFee)\r\n    ).toFixed(2);\r\n    const totalFee = (\r\n      parseFloat(enrolFee) +\r\n      parseFloat(tuition) +\r\n      parseFloat(materialsFee)\r\n    ).toFixed(2);\r\n    let balance = (totalFee - totalDue).toFixed(2);\r\n\r\n    let campusAddress = \"\";\r\n    if (this.state.campus === \"Melbourne\") {\r\n      campusAddress = \"Level 10, 190 Queen St., Melbourne, VIC 3000\";\r\n    } else {\r\n      campusAddress = \"98 Cleveland Street, Greenslopes, QLD 4120\";\r\n    }\r\n\r\n    let period2 = 0,\r\n      period3 = 0,\r\n      period4 = 0;\r\n\r\n    if (parseInt(term) < 4) {\r\n      period2 = balance;\r\n      period3 = \"0\";\r\n      period4 = \"0\";\r\n    } else {\r\n      const eachTermFee = (parseFloat(tuition) / 4).toFixed(2);\r\n\r\n      period2 = eachTermFee;\r\n      period3 = eachTermFee;\r\n      period4 = (parseFloat(tuition) - eachTermFee * 2).toFixed(2);\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      code,\r\n      cricos,\r\n      duration,\r\n      term,\r\n      issueDate: Date.now(),\r\n      totalDue,\r\n      totalFee,\r\n      balance,\r\n      campusAddress,\r\n      birthday: convertDate(this.state.birthday),\r\n      start: convertDate(this.state.start),\r\n      end: convertDate(this.state.end),\r\n      period2,\r\n      period3,\r\n      period4,\r\n    });\r\n\r\n    // // parse string of date to the format of firebase accepted.\r\n    // newOffer.birthday = firebase.firestore.Timestamp.fromDate(\r\n    //   new Date(newOffer.birthday)\r\n    // );\r\n\r\n    // firestore\r\n    //   .add({ collection: \"offers\" }, newOffer)\r\n    //   .then(() => this.props.history.push(\"/\"));\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // componentDidUpdate() {\r\n  //   const { courses } = this.props;\r\n  //   if (courses && this.state.id !== courses.id) {\r\n  //     this.setState({\r\n  //       ...course,\r\n  //       // start: inputDate(course.start.seconds),\r\n  //       // end: inputDate(course.end.seconds),\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const { courses } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <h2>\r\n              <i className=\"fas fa-kiwi-bird\"></i> New Offer\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back To Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"row\">\r\n                  <div className=\"form-group col-md-3\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"firstName\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.firstname}\r\n                    />\r\n                  </div>\r\n                  <div className=\" form-group col-md-3\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"lastName\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.lastName}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-3 \">\r\n                    <label htmlFor=\"passport\">Passport</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"passport\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.passport}\r\n                    />\r\n                  </div>\r\n                  <div className=\" form-group col-md-3\">\r\n                    <label htmlFor=\"birthday\">Birthday</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"birthday\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.birthday}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"phone\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.phone}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.email}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"address\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.address}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label htmlFor=\"courseName\">Course</label>\r\n                    <select\r\n                      name=\"courseName\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.courseName}\r\n                      required\r\n                    >\r\n                      <option value=\"\"> -- Select an option -- </option>\r\n                      {courses\r\n                        ? Object.values(courses).map((course) => (\r\n                            <option key={course.name} value={course.name}>\r\n                              {course.name}\r\n                            </option>\r\n                          ))\r\n                        : null}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"start\">Start Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"start\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.start}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"end\">End Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"end\"\r\n                      minLength=\"2\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.end}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"campus\">Campus</label>\r\n                    <select\r\n                      name=\"campus\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.campus}\r\n                      required\r\n                    >\r\n                      <option value=\"\"> -- Select an option -- </option>\r\n                      <option key=\"Melbourne\" value=\"Melbourne\">\r\n                        Melbourne\r\n                      </option>\r\n                      <option key=\"Brisbane\" value=\"Brisbane\">\r\n                        Brisbane\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"enrolFee\">Enrol $</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"enrolFee\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.enrolFee}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"tuition\">Tuition</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"tuition\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.tuition}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"materialsFee\">Materials Fee</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"materialsFee\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.materialsFee}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"tuitionFirst\">Tution First Pay</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"tuitionFirst\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.tuitionFirst}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3 form-group\">\r\n                    <label htmlFor=\"officerName\">Officer Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"officerName\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.officerName}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"template\">Offer Template</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"template\"\r\n                      className=\"form-control-file\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.template}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Generate Offer\"\r\n                  className=\"btn btn-success btn-block col-md-4 offset-md-4\"\r\n                  required\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// AddOffer.propTypes = {\r\n//   firestore: PropTypes.object,\r\n// };\r\n\r\nexport default AddOffer;\r\n\r\n// export default compose(\r\n//   firestoreConnect(() => [\"courses\"]),\r\n//   connect((state) => ({\r\n//     courses: state.firestore.data.courses,\r\n//   }))\r\n// )(AddOffer);\r\n","import { NOTIFY_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  message: null,\r\n  messageType: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case NOTIFY_USER:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        messageType: action.messageType,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, compose } from \"redux\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance, firestoreReducer } from \"redux-firestore\";\r\n\r\n// Reducers\r\nimport notifyReducer from \"./reducers/notifyReducer\";\r\nimport settingsReducer from \"./reducers/settingsReducer\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB_hfhYPZjU85uRlayGncuKEsKenIG29D0\",\r\n  authDomain: \"studentmanager-55f6c.firebaseapp.com\",\r\n  databaseURL: \"https://studentmanager-55f6c.firebaseio.com\",\r\n  projectId: \"studentmanager-55f6c\",\r\n  storageBucket: \"studentmanager-55f6c.appspot.com\",\r\n  messagingSenderId: \"467225539195\",\r\n  appId: \"1:467225539195:web:1566ba3ab3768abc7428de\",\r\n};\r\n\r\n// react redux firebase config\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n};\r\n\r\n// Init firebase instance\r\nfirebase.initializeApp(firebaseConfig);\r\n// Init firestore\r\nfirebase.firestore();\r\n\r\n// Add firebase, firestore and any other states to reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer, // <- needed if using firestore\r\n  notify: notifyReducer,\r\n  settings: settingsReducer,\r\n});\r\n\r\n// Check for settings in locaStorage\r\nif (localStorage.getItem(\"settings\") == null) {\r\n  // Default settings\r\n  const defaultStorage = {\r\n    allowRegistration: false,\r\n  };\r\n\r\n  // Set to localStorage, localStorage only accepts string as the parameters\r\n  localStorage.setItem(\"settings\", JSON.stringify(defaultStorage));\r\n}\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = { settings: JSON.parse(localStorage.getItem(\"settings\")) };\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport const rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // <- needed if using firestore\r\n};\r\n\r\nexport default store;\r\n","import { ALLOW_REGISTRATION } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case ALLOW_REGISTRATION:\r\n      return {\r\n        ...state,\r\n        allowRegistration: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n// import createHistory from \"history/createBrowserHistory\";\r\nimport Spinner from \"../layout/Spinner\"; // change it to your custom component\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n// const browserHistory = createHistory();\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  AuthenticatingComponent: Spinner,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty,\r\n  //   redirectAction: newLoc => (dispatch) => {\r\n  //     browserHistory.replace(newLoc); // or routerActions.replace\r\n  //     dispatch({ type: 'UNAUTHED_REDIRECT' });\r\n  //   },\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  AuthenticatingComponent: Spinner,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty,\r\n  //   redirectAction: newLoc => (dispatch) => {\r\n  //     browserHistory.replace(newLoc); // or routerActions.replace\r\n  //     dispatch({ type: 'UNAUTHED_REDIRECT' });\r\n  //   },\r\n});\r\n","import React from \"react\";\nimport AppNavbar from \"./components/layout/AppNavbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Dashboard from \"./components/layout/Dashboard\";\nimport AddCourse from \"./components/courses/AddCourse\";\nimport EditCourse from \"./components/courses/EditCourse\";\nimport Login from \"./components/auth/Login\";\nimport Settings from \"./components/settings/Settings\";\nimport Register from \"./components/auth/Register\";\nimport AddOffer from \"./components/offer/AddOffer\";\nimport { Provider } from \"react-redux\";\nimport store, { rrfProps } from \"./store\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport {\n  UserIsAuthenticated,\n  UserIsNotAuthenticated,\n} from \"./components/util/auth\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <Router basename=\"/cms\">\n          <div className=\"App\">\n            <AppNavbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Redirect to=\"/courses\" />\n                </Route>\n                <Route\n                  exact\n                  path=\"/courses\"\n                  component={UserIsAuthenticated(Dashboard)}\n                />\n                <Route\n                  exact\n                  path=\"/courses/add\"\n                  component={UserIsAuthenticated(AddCourse)}\n                />\n                <Route\n                  exact\n                  path=\"/courses/edit/:id\"\n                  component={UserIsAuthenticated(EditCourse)}\n                />\n                <Route\n                  exact\n                  path=\"/offer/add\"\n                  component={UserIsAuthenticated(AddOffer)}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route\n                  exact\n                  path=\"/register\"\n                  component={UserIsNotAuthenticated(Register)}\n                />\n                <Route\n                  exact\n                  path=\"/settings\"\n                  component={UserIsAuthenticated(Settings)}\n                />\n              </Switch>\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}